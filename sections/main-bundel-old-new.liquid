<style>
	.bundel-container {
		padding: 6rem 0;
	}
	footer {
		display: none;
	}
	.bundel-form {
		display: grid;
		grid-template-columns: auto auto auto;
		gap: 2rem;
	}
	.bundel-form button {
		padding: 1rem 2rem;
		border-radius: 6px;
		color: bisque;
		border: none;
		cursor: pointer;
		background-color: brown;
		font-weight: 500;
		transition: all 0.25s ease-in-out;
	}
	.bundel-form button:hover {
		background-color: rgb(132, 28, 28);
	}
</style>

<div class="page-width bundel-container ">
	<form id="bundel-form" class="bundel-form">
		{% comment %} Select Group One {% endcomment %}
		<div class="">
			<label for="cupcake">Select The Cupcake:</label>
			<select id="cupcake" name="cupcake">
				{% for product in collections.all.products  %}
					{% if product.tags contains 'cupcake' %}
						{%  assign variant = product.selected_or_first_available_variant %}
						<option value="{{variant.id}}">{{ product.title }} - {{ variant.price | money }}</option>
					{% endif %}
				{% endfor %}
			</select>
		</div>

		{% comment %} Select Group Two {% endcomment %}
		<div class="">
			<label for="shake">Select The Drink:</label>
			<select id="shake" name="shake">
				{% for product in collections.all.products  %}
					{% if product.tags contains 'shake' %}
						{%  assign variant = product.selected_or_first_available_variant %}
						<option value="{{variant.id}}">{{ product.title }} - {{ variant.price | money }}</option>
					{% endif %}
				{% endfor %}
			</select>
		</div>

		{% comment %} Select Group Three {% endcomment %}
		<div class="">
			<label for="memorable">Select The Addons:</label>
			<select id="memorable" name="memorable">
				{% for product in collections.all.products  %}
					{% if product.tags contains 'memorable' %}
						{%  assign variant = product.selected_or_first_available_variant %}
						<option value="{{variant.id}}">{{ product.title }} - {{ variant.price | money }}</option>
					{% endif %}
				{% endfor %}
			</select>
		</div>
		<div class="">
			<button>Add To Cart</button>
		</div>
	</form>
</div>

<script>
	const productData = {{ product | json }};
	const variantAdminGraphqlApiId = productData.variants[0].id;
	console.log('Variant Admin GraphQL API ID:', variantAdminGraphqlApiId);

	const form = document.getElementById('bundel-form');

	form.addEventListener('submit', async (e) => {
		e.preventDefault();
		const group1 = document.getElementById('cupcake').value;
		const group2 = document.getElementById('shake').value;
		const group3 = document.getElementById('memorable').value;

		const bundleId = new Date().getTime();
		const productVariantId = ""

		try {
			const response = await fetch('/cart/add.js', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({
					items: [
						{
							id: group1,
							quantity: 1,
							properties: {
								_bundleId: variantAdminGraphqlApiId
							}
						},
						{
							id: group2,
							quantity: 1,
							properties: {
								_bundleId: variantAdminGraphqlApiId
							}
						},
						{
							id: group3,
							quantity: 1,
							properties: {
								_bundleId: variantAdminGraphqlApiId
							}
						},
					]
				})
			});

			if (!response.ok) {
				const errorData = await response.json();
				console.error('Error:', errorData);
				alert('Error adding items to cart.');
			} else {
				console.log('Items added to cart successfully.');
				// window.location.reload();
			}
		} catch (error) {
			console.error('Network error:', error);
			alert('Network error occurred.');
		}
	});
</script>
